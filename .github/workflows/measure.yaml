name: Measure Performance Impact
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Specifies the name of the performance test'
        required: true
        type: string
      chaos:
        description: 'Name of the chaos that will be introduced between measurements'
        default: network-latency-35
        required: false
        type: string
      helm-arguments:
        description: 'Extra helm arguments to use when deploying benchmark'
        default: ''
        required: false
        type: string
      publish:
        description: 'Where to publish results, can be "slack"'
        default: ''
        required: false
        type: string
  workflow_call:
    inputs:
      name:
        description: 'Specifies the name of the performance test'
        required: true
        type: string
      chaos:
        description: 'Name of the chaos that will be introduced between measurements'
        default: network-latency-35
        required: false
        type: string
      helm-arguments:
        description: 'Extra helm arguments to use when deploying benchmark'
        default: ''
        required: false
        type: string
      publish:
        description: 'Where to publish results, can be "slack"'
        default: ''
        required: false
        type: string

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      summary_markdown: ${{ steps.setup.outputs.summary_markdown }}
      summary_slack: ${{ steps.setup.outputs.summary_slack }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: zeebe-io/zeebe-performance-test
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/628707732411/locations/global/workloadIdentityPools/zeebe-gh-actions/providers/gha-provider'
          service_account: 'zeebe-gh-actions@zeebe-io.iam.gserviceaccount.com'
      - uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'zeebe-cluster'
          location: 'europe-west1-b'
      - run: ./setup.sh
        id: setup
        env:
          BENCHMARK_NAME: ${{ inputs.name }}
          HELM_ARGS: ${{ inputs.helm-arguments }}
  measure-before:
    runs-on: ubuntu-latest
    needs: [ setup ]
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      summary_markdown: ${{ steps.measure.outputs.summary_markdown }}
      summary_slack: ${{ steps.measure.outputs.summary_slack }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: zeebe-io/zeebe-performance-test
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/628707732411/locations/global/workloadIdentityPools/zeebe-gh-actions/providers/gha-provider'
          service_account: 'zeebe-gh-actions@zeebe-io.iam.gserviceaccount.com'
      - uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'zeebe-cluster'
          location: 'europe-west1-b'
      - run: ./measure.sh
        id: measure
        env:
          BENCHMARK_NAME: ${{ inputs.name }}
  deploy-chaos:
    runs-on: ubuntu-latest
    needs: [ measure-before ]
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      summary_markdown: ${{ steps.chaos.outputs.summary_markdown }}
      summary_slack: ${{ steps.chaos.outputs.summary_slack }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: zeebe-io/zeebe-performance-test
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/628707732411/locations/global/workloadIdentityPools/zeebe-gh-actions/providers/gha-provider'
          service_account: 'zeebe-gh-actions@zeebe-io.iam.gserviceaccount.com'
      - uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'zeebe-cluster'
          location: 'europe-west1-b'
      - run: ./chaos.sh
        id: chaos
        env:
          CHAOS: ${{ inputs.chaos }}
          BENCHMARK_NAME: ${{ inputs.name }}
  measure-after:
    runs-on: ubuntu-latest
    needs: [ deploy-chaos ]
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      summary_markdown: ${{ steps.measure.outputs.summary_markdown }}
      summary_slack: ${{ steps.measure.outputs.summary_slack }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: zeebe-io/zeebe-performance-test
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/628707732411/locations/global/workloadIdentityPools/zeebe-gh-actions/providers/gha-provider'
          service_account: 'zeebe-gh-actions@zeebe-io.iam.gserviceaccount.com'
      - uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'zeebe-cluster'
          location: 'europe-west1-b'
      - run: ./measure.sh
        id: measure
        env:
          BENCHMARK_NAME: ${{ inputs.name }}
  cleanup:
    runs-on: ubuntu-latest
    needs: [ measure-after ]
    if: always()
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
        with:
          repository: zeebe-io/zeebe-performance-test
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/628707732411/locations/global/workloadIdentityPools/zeebe-gh-actions/providers/gha-provider'
          service_account: 'zeebe-gh-actions@zeebe-io.iam.gserviceaccount.com'
      - uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'zeebe-cluster'
          location: 'europe-west1-b'
      - run: kubectl delete ns ${{ inputs.name }}
  publish-to-slack:
    runs-on: ubuntu-latest
    needs: [ setup, measure-before, deploy-chaos, measure-after ]
    if: inputs.publish == 'slack'
    steps:
      - name: Send slack notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": ":fyi2: Performance measurements for benchmark ${{ inputs.name }} :zee-speed:",
             	"blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJSON(needs.setup.outputs.summary_slack) }}
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJSON(needs.measure-before.outputs.summary_slack) }}
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJSON(needs.deploy-chaos.outputs.summary_slack) }}
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJSON(needs.measure-after.outputs.summary_slack) }}
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Detailed summary"
                      },
                      "value": "detailed_summary",
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  publish-to-pull-request:
    runs-on: ubuntu-latest
    needs: [ setup, measure-before, deploy-chaos, measure-after ]
    if: inputs.publish == 'comment'
    steps:
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: test
          message: |
             ### Setup
               ${{ needs.setup.outputs.summary_markdown }}
             ### Measurement before
               ${{ needs.measure-before.outputs.summary_markdown }}
             ### Chaos injection
               ${{ needs.deploy-chaos.outputs.summary_markdown }}
             ### Measurement after
               ${{ needs.measure-after.outputs.summary_markdown }}
             ### Details
               See ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
